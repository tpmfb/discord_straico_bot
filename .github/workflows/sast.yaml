name: Python SAST

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  security-events: write

jobs:
  sast:
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install tools
        run: pip install bandit semgrep

      # --- Pre-create empty SARIF files so they always exist ---
      - name: Initialize empty SARIFs
        run: |
          echo '{"version":"2.1.0","runs":[]}' > bandit-report.sarif
          echo '{"version":"2.1.0","runs":[]}' > semgrep-report.sarif

      # --- Bandit ---
      - name: Run Bandit
        run: |
          bandit -r . -ll -f json -o bandit-report.json || true
          python3 - <<'EOF'
          import json, pathlib
          j = pathlib.Path("bandit-report.json")
          s = pathlib.Path("bandit-report.sarif")
          if j.exists() and j.stat().st_size > 0:
              data = json.load(j.open())
              sarif = {
                  "version": "2.1.0",
                  "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
                  "runs": [{
                      "tool": {"driver": {"name": "Bandit"}},
                      "results": [{
                          "ruleId": r.get("test_id"),
                          "level": r.get("issue_severity", "note").lower(),
                          "message": {"text": r.get("issue_text")},
                          "locations": [{
                              "physicalLocation": {
                                  "artifactLocation": {"uri": r.get("filename")},
                                  "region": {"startLine": r.get("line_number", 1)}
                              }
                          }]
                      } for r in data.get("results", [])]
                  }]
              }
              s.write_text(json.dumps(sarif, indent=2))
          EOF

      # --- Semgrep ---
      - name: Run Semgrep
        run: |
          semgrep scan --config=auto --json > semgrep-report.json || true
          semgrep scan --config=auto --sarif-output semgrep-report.sarif || echo "semgrep SARIF skipped"

      # --- Verify files exist (debug aid) ---
      - name: List generated files
        run: |
          echo "Working directory: $(pwd)"
          ls -lh *.json *.sarif || true

      # --- Upload artifacts ---
      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sast-reports
          path: |
            bandit-report.json
            semgrep-report.json
            bandit-report.sarif
            semgrep-report.sarif

      # --- Upload SARIF to Security tab ---
      - name: Upload SARIFs to GitHub Security
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: |
            bandit-report.sarif
            semgrep-report.sarif
